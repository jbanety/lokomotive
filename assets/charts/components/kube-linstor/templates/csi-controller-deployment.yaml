{{- $fullName := include "linstor.fullname" . -}}
{{- if .Values.csi.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-csi-controller
spec:
  replicas: {{ .Values.csi.controller.replicaCount }}
  selector:
    matchLabels:
      app: {{ $fullName }}-csi-controller
      role: linstor-csi
  template:
    metadata:
      labels:
        app: {{ $fullName }}-csi-controller
        role: linstor-csi
    spec:
      containers:
      - name: csi-provisioner
        {{- with .Values.csi.image.csiProvisioner }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --csi-address=$(ADDRESS)
        - --v=5
        - --timeout=1m
        # restore old default fstype
        - --default-fstype=ext4
        - --feature-gates=Topology={{ .Values.csi.controller.csiProvisioner.topology }}
        - --leader-election=true
        - --leader-election-namespace=$(NAMESPACE)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: csi-attacher
        {{- with .Values.csi.image.csiAttacher }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --timeout=1m
        - --leader-election=true
        - --leader-election-namespace=$(NAMESPACE)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: csi-resizer
        {{- with .Values.csi.image.csiResizer }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --timeout=1m
        # LINSTOR can resize while in use, no need to check if volume is in use
        - --handle-volume-inuse-error=false
        - --leader-election=true
        - --leader-election-namespace=$(NAMESPACE)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: csi-snapshotter
        {{- with .Values.csi.image.csiSnapshotter }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --timeout=1m
        - --csi-address=$(ADDRESS)
        - --leader-election=true
        - --leader-election-namespace=$(NAMESPACE)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: csi-livenessprobe
        {{- with .Values.csi.image.csiLivenessProbe }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --csi-address=$(CSI_ENDPOINT)
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: linstor-csi-plugin
        {{- with .Values.csi.image.linstorCsiPlugin }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LS_CONTROLLERS)
        - --log-level=debug
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9808
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LS_CONTROLLERS
        {{- if not .Values.controller.ssl.enabled }}
          value: http://{{ $fullName }}-controller:{{ .Values.controller.port }}
        {{- else }}
          value: https://{{ $fullName }}-controller:{{ .Values.controller.ssl.port }}
        - name: LS_USER_CERTIFICATE
          valueFrom:
            secretKeyRef:
              key: tls.crt
              name: {{ $fullName }}-client-tls
        - name: LS_USER_KEY
          valueFrom:
            secretKeyRef:
              key: tls.key
              name: {{ $fullName }}-client-tls
        - name: LS_ROOT_CA
          valueFrom:
            secretKeyRef:
              key: ca.crt
              name: {{ $fullName }}-client-tls
        {{- end }}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      imagePullSecrets:
        {{- toYaml .Values.csi.image.pullSecrets | nindent 8 }}
      {{- with .Values.csi.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.csi.controller.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      priorityClassName: system-cluster-critical
      serviceAccount: {{ $fullName }}-csi-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir
{{- end }}
